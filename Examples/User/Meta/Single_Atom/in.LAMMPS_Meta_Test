echo screen
dimension 2
boundary f f p
units lj
atom_style atomic

#specify the box for the simulation.
region box block -1.5 2.0 -1.5 2.0 -1 1 units box
create_box        1 box

#Set mass of all particles
mass * 1.0

#Set pair potentials
pair_style lj/cut 3.0
pair_coeff * * 1.0 1.0 3.0

#Put an atom in the box
create_atoms 1 single -1.0 -1.0 0 units box
group solid type 1

#Set up fixes
fix 1 all nve
fix 2 all langevin 1.0 1.0 1.0 165876

#Put up barriers so atom can't 'escape'
fix 3 all wall/reflect xlo EDGE xhi EDGE ylo EDGE yhi EDGE 

#Lets create some force potentials for our system using gaussians
#Potential inputs: 
#Height, sigma, center (x and y are the same)

#include SUBSTRATE_FUNCTIONS (two energy wells and a barrier)

		#####First potential information (gaussian/well))###
		variable _w01 equal -18.4631620773
		variable _s01 equal 0.3412727171
		variable _c01 equal -0.9790631338

		variable e_01 atom "v__w01 * exp(-((x-v__c01)^2+(y-v__c01)^2)/(2*v__s01^2))"
		variable fx_01 atom "v__w01*((x-v__c01)/(v__s01^2))*exp(-((x-v__c01)^2+(y-v__c01)^2)/(2*v__s01^2))"
		variable fy_01 atom "v__w01*((y-v__c01)/(v__s01^2))*exp(-((x-v__c01)^2+(y-v__c01)^2)/(2*v__s01^2))"
		##################################################
		
		###Second potential information (gaussian/barrier))#
		variable _w02 equal -39.8889505555
		variable _s02 equal 0.2420191493
		variable _c02 equal 0.9790631338

		variable e_02 atom "v__w02 * exp(-((x-v__c02)^2+(y-v__c02)^2)/(2*v__s02^2))"
		variable fx_02 atom "v__w02*((x-v__c02)/(v__s02^2))*exp(-((x-v__c02)^2+(y-v__c02)^2)/(2*v__s02^2))"
		variable fy_02 atom "v__w02*((y-v__c02)/(v__s02^2))*exp(-((x-v__c02)^2+(y-v__c02)^2)/(2*v__s02^2))"
		##################################################

		#####Third potential information (gaussian/well))###
		variable _w03 equal 9.8889505555
		variable _s03 equal 0.5
		variable _c03 equal 0.

		variable e_03 atom "v__w03 * exp(-((x-v__c03)^2+(y-v__c03)^2)/(2*v__s03^2))"
		variable fx_03 atom "v__w03*((x-v__c03)/(v__s03^2))*exp(-((x-v__c03)^2+(y-v__c03)^2)/(2*v__s03^2))"
		variable fy_03 atom "v__w03*((y-v__c03)/(v__s03^2))*exp(-((x-v__c03)^2+(y-v__c03)^2)/(2*v__s03^2))"
		###################################################

#Sum the three forces in the x and y direction
variable substrate_xforce atom "(v_fx_01+v_fx_02+v_fx_03)"
variable substrate_yforce atom "(v_fy_01+v_fy_02+v_fy_03)"

#Calculate total energy
variable substrate_energy atom "(v_e_01+v_e_02+v_e_03)"

#Add forces and energy
fix  4 all addforce v_substrate_xforce v_substrate_yforce 0 energy v_substrate_energy

#Call ssages to run the metadynamics
fix  ssages all ssages

compute ffx all reduce sum v_substrate_xforce
compute ffy all reduce sum v_substrate_yforce
compute ee all reduce sum v_substrate_energy
compute xxa all property/atom x
compute xx all reduce sum c_xxa
compute yya all property/atom y
compute yy all reduce sum c_yya

compute fxa all property/atom fx
compute ffxa all reduce sum c_fxa
compute fya all property/atom fy
compute ffya all reduce sum c_fya

timestep 0.001
thermo_style custom step temp ke pe etotal c_xx c_yy c_ffx c_ffy c_ffxa c_ffya c_ee press

#For the sync to engine to work correctly need to set thermo 1 for now
thermo 10000
run 10000000